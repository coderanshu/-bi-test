- alerts = Alert.active.find_all_by_patient_id_and_body_system_id(patient.id, body_system.id) unless patient.nil?
- if alerts.blank?
  (There are no alerts to display)
- else
  %h2 Alerts
  - alerts.each do |alert|
    %div.alert{:class => alert_css_class(alert), :data => {:alertid => alert.id}}
      = alert.description
      - if alert.status == Alert::DEFERRED
        %div.expires-on
          Deferred until:
          = format_date_time(alert.expires_on)
      - elsif alert.status == Alert::ACKNOWLEDGED
        %div.expires-on
          Acknowledged:
          = format_date_time(alert.acknowledged_on)
      - else
        %br

      = button_tag "Acknowledge", { :class => "alert-button", :data => {:status => Alert::ACKNOWLEDGED} }
      = button_tag "Defer", { :class => "alert-button", :data => {:status => Alert::DEFERRED} }
      = button_tag "Resolved", { :class => "alert-button", :data => {:status => Alert::RESOLVED} }
      = button_tag "Alert is incorrect", { :class => "alert-button", :data => {:status => Alert::MARKED_INCORRECT} }
      = button_tag "Add to Dx List", { :class => "alert-button", :data => {:status => Alert::ADD_TO_DX_LIST} } unless alert.problems.possible.blank?

      - unless alert.guideline_id.blank?
        - patient_guideline = PatientGuideline.find_all_by_patient_id_and_guideline_id(patient.id, alert.guideline_id)
        - unless patient_guideline.blank?
          %h3 Rationale
          = render "patient_guideline_details", :patient => patient, :guideline => alert.guideline, :body_system => alert.body_system_id

      - unless alert.guideline_id.blank? or alert.guideline.guideline_actions.blank?
        %h3 Considerations
        %ul
          - alert.guideline.guideline_actions.each do |action|
            %li
              = action.text
              = alert_action alert, action
