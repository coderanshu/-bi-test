%div.span12
  %h1 Flowsheet
  = form_tag('/patient_flowsheet_rows', :class => "edit_patient_flowsheet") do
    = hidden_field_tag :patient_flowsheet_id, @flowsheet.id
    = hidden_field_tag :patient_id, @patient.id
    = hidden_field_tag :template, @flowsheet.template

  #flowsheet
    %table
      %tr.heading
        = render :partial => "flowsheets/#{@flowsheet.template}_header"

      - @flowsheet.patient_flowsheet_rows.each do |row|
        - @patient_id = @flowsheet.patient_id
        - @patient_flowsheet_row = row
        %tr
          %td
            = render :partial => "flowsheets/#{@flowsheet.template}_row"

  = button_tag "Add Row", {:id => :add_row}

:javascript
  $(document).ready(function() {
    $("#add_row").click(function() { newFlowsheetRow() });
    bindGUIElements();
  });

  function changeFlowsheetRowElementsVisibility(row, visible) {
    var collection = row.find(":input:not('.observation_date')");
    visible ? collection.show() : collection.hide();
  }

  function fetchFlowsheetRow(url, replaceElement) {
    $.ajax({
      type: "GET",
      url: url,
      contentType: 'application/json',
      success: function(data) {
        if (replaceElement != undefined) {
          replaceFlowsheetRow(data, replaceElement);
        }
        else {
          addFlowsheetRow(data);
        }
      },
      error: function(err) {
        if (err.status == 200) { addFlowsheetRow(err.responseText); }
      }
    });
  }

  function newFlowsheetRow() {
    fetchFlowsheetRow("/patient_flowsheet_rows/new?patient_id=#{@patient.id}&template=#{@flowsheet.template}&patient_flowsheet_id=#{@flowsheet.id}");
  }

  function editFlowsheetRow(id, replaceElement) {
    fetchFlowsheetRow("/patient_flowsheet_rows/" + id + "/edit", replaceElement);
  }

  function addFlowsheetRow(html) {
    $("#flowsheet table tr:last").after($(html));
    bindGUIElements();
  }

  function replaceFlowsheetRow(html, replaceElement) {
    replaceElement.replaceWith(html);
    bindGUIElements();
    $("#flowsheet input:text").not(".datepicker").blur(function() {
      updateFlowsheetResponse(this);
    });
    $(".edit_patient_flowsheet_row .datepicker").change(function() {
      updateFlowsheetResponse(this);
    });
  }

  function saveFlowsheetResponse(element) {
    form = $(".edit_patient_flowsheet");
    var observation = buildObservationData(form, element);
    if (form.length && observation != undefined) {
      var action = "POST";
      var url = "/patient_flowsheet_rows/";
      if (observation.observation.id != undefined) {
        action = "PUT";
        url = url + observation.observation.patient_flowsheet_row_id;
      }

      $.ajax({
        type: action,
        url: url,
        data: observation,
        success: function(data) { updateObservationFromResponse(element, data) },
        error: function(err) { 
          if (err.status == 200) { 
            //editFlowsheetRow(data.id, element.closest("tr")); 
          } 
        }
        //success: function(data) { editFlowsheetRow(data.id, element.closest("tr")); },
        //error: function(err) { if (err.status == 200) { editFlowsheetRow(data.id, element.closest("tr")); } }
      });
    }
  }
  
  function updateObservationFromResponse(element, data) {
    element.data('id', data.observation_id).attr('data-id', data.observation_id);
    var row = element.closest("tr");
    row.data('flowsheet-row-id', data.flowsheet_row_id).attr('data-flowsheet-row-id', data.flowsheet_row_id);
    var obsDate = row.find(".observation_date");
    var newObsDateID = "obs_day_" + data.observation_id;
    obsDate.attr("id", newObsDateID).attr("name", newObsDateID);
  }

  function buildObservationData(form, obs_field) {
    var flowsheet_row_id = obs_field.closest("tr").data("flowsheet-row-id");
    flowsheet_row_id = (flowsheet_row_id == "new" ? "" : flowsheet_row_id);
    var observation = {
      patient_flowsheet_id: form.find("#patient_flowsheet_id").val(),
      patient_id: form.find("#patient_id").val(),
      template: form.find("#template").val(),
      observation: {
        id: obs_field.data('id'),
        name: obs_field.attr('name'),
        value: obs_field.val(),
        patient_id: form.find("#patient_id").val(),
        code_system: obs_field.data("code-system"),
        code: obs_field.data("code"),
        units: obs_field.data("units"),
        observed_on: obs_field.closest("tr").find(".observation_date").val(),
        patient_flowsheet_row_id: flowsheet_row_id
        }
    };
    return observation;
  }